{"version":3,"sources":["images/photo1.png","images/photo2.png","images/photo3.png","images/photo4.png","images/photo5.png","images/photo6.png","components/Head.js","components/Footer.js","components/Cards.js","Team.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RowHead","styled","div","ColumnHeadLeft","ColumnHeadRight","DivText","Title","TextWho","WhoTitle","WhoDescription","Head","Row","Column","p","One","Two","Three","Four","Five","Six","Image","img","DivImage","TextVertical","Name","Cards","src","Image1","Image2","Image3","Image4","Image5","Image6","Team","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c33015e8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/photo1.3a0be588.png\";","module.exports = __webpack_public_path__ + \"static/media/photo2.2f3221fa.png\";","module.exports = __webpack_public_path__ + \"static/media/photo3.cd1a8b6d.png\";","module.exports = __webpack_public_path__ + \"static/media/photo4.3db7eff7.png\";","module.exports = __webpack_public_path__ + \"static/media/photo5.f3bb02a9.png\";","module.exports = __webpack_public_path__ + \"static/media/photo6.1f59f908.png\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const RowHead = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding-left: 15%;\n  padding-right: 15%;\n  padding-bottom: 90px;\n  padding-top: 60px;\n\n  @media (max-width: 700px) {\n    padding-left: 5%;\n    padding-right: 5%;\n  }\n\n  @media (max-width: 400px) {\n    padding-left: 2%;\n    padding-right: 2%;\n  }\n`;\n\nexport const ColumnHeadLeft = styled.div`\n  flex: 10%;\n  max-width: 100%;\n  padding: 0 4px;\n\n  @media (max-width: 700px) {\n    flex: 100%;\n  }\n`;\n\nexport const ColumnHeadRight = styled.div`\n  flex: 25%;\n  max-width: 100%;\n  padding: 0 4px;\n  @media (max-width: 700px) {\n    flex: 100%;\n    margin-top: 50px;\n  }\n`;\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding-left: 15%;\n  padding-right: 15%;\n`;\n\nexport const Column = styled.div`\n  flex: 25%;\n  max-width: 100%;\n  padding: 0 4px;\n`;\n\nexport const DivText = styled.div`\n  height: auto;\n  width: 100%;\n`;\n\nexport const Title = styled.div`\n  font-family: PT Serif;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 36px;\n  line-height: 48px;\n  letter-spacing: -0.045em;\n  color: #000000;\n`;\n\nexport const TextWho = styled.div`\n  height: auto;\n  width: 100%;\n`;\n\nexport const WhoTitle = styled.div`\n  font-family: Poppins;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 27px;\n  text-transform: uppercase;\n  color: #000000;\n`;\n\nexport const WhoDescription = styled.div`\n  font-family: Poppins;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 18px;\n  line-height: 27px;\n  color: #000000;\n  margin-top: 10px;\n`;\n\nconst Head = () => {\n  return (\n    <RowHead>\n      <ColumnHeadLeft>\n        <DivText>\n          <Title> The creative crew </Title>\n        </DivText>\n      </ColumnHeadLeft>\n\n      <ColumnHeadRight>\n        <TextWho>\n          <WhoTitle>Who we are</WhoTitle>\n          <WhoDescription>\n            We are team of creatively diverse. driven. innovative individuals\n            working in various locations from the world.\n          </WhoDescription>\n        </TextWho>\n      </ColumnHeadRight>\n    </RowHead>\n  );\n};\n\nexport default Head;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding-left: 20%;\n  padding-right: 20%;\n  padding-bottom: 50px;\n  padding-top: 60px;\n\n  @media (max-width: 700px) {\n    padding-left: 5%;\n    padding-right: 5%;\n    padding-bottom: 10px;\n    padding-top: 10px;\n  }\n\n  @media (max-width: 400px) {\n    padding-left: 2%;\n    padding-right: 2%;\n  }\n`;\n\nexport const Column = styled.div`\n  flex: 10%;\n  max-width: 100%;\n  padding: 0 4px;\n`;\n\nexport const DivText = styled.div`\n  height: auto;\n  width: 100%;\n`;\n\nexport const Title = styled.p`\n  text-align: center;\n  font-family: Montserrat;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 17px;\n  color: #a9a9a9;\n`;\n\nconst Head = () => {\n  return (\n    <Row>\n      <Column>\n        <DivText>\n          <Title> Lorraine @ DevChallenges.io </Title>\n        </DivText>\n      </Column>\n    </Row>\n  );\n};\n\nexport default Head;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Image1 from \"../images/photo1.png\";\nimport Image2 from \"../images/photo2.png\";\nimport Image3 from \"../images/photo3.png\";\nimport Image4 from \"../images/photo4.png\";\nimport Image5 from \"../images/photo5.png\";\nimport Image6 from \"../images/photo6.png\";\n\nexport const Row = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  padding-left: 15%;\n  padding-right: 15%;\n  @media (max-width: 700px) {\n    padding-left: 5%;\n    padding-right: 5%;\n  }\n\n  @media (max-width: 400px) {\n    padding-left: 2%;\n    padding-right: 2%;\n  }\n`;\n\nexport const Column = styled.div`\n  flex: 30%;\n  max-width: 100%;\n  @media (max-width: 700px) {\n    max-width: 50%;\n  }\n`;\n\nexport const One = styled.div`\n  height: 300px;\n`;\n\nexport const Two = styled.div`\n  height: 300px;\n  @media (max-width: 700px) {\n    margin-top: 120px;\n  }\n`;\n\nexport const Three = styled.div`\n  height: 300px;\n  margin-top: 90px;\n  text-align: center;\n  @media (max-width: 700px) {\n    margin-top: 120px;\n  }\n`;\n\nexport const Four = styled.div`\n  height: 300px;\n  margin-top: 150px;\n  text-align: center;\n  @media (max-width: 700px) {\n    margin-top: 0px;\n  }\n`;\n\nexport const Five = styled.div`\n  height: 300px;\n  text-align: right;\n`;\n\nexport const Six = styled.div`\n  height: 300px;\n  text-align: right;\n  @media (max-width: 700px) {\n    margin-top: 120px;\n  }\n`;\n\nexport const Image = styled.img`\n  margin-right: 10px;\n  width: 200px;\n\n  @media (max-width: 700px) {\n    width: 150px;\n  }\n`;\n\nexport const DivImage = styled.div`\n  float: left;\n`;\n\nexport const TextVertical = styled.div`\n  writing-mode: vertical-lr;\n  font-family: PT Serif;\n  font-size: 12px;\n  line-height: 16px;\n  text-transform: uppercase;\n  color: #000000;\n`;\nexport const Name = styled.p`\n  text-align: initial;\n  font-family: Poppins;\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 27px;\n  color: #000000;\n`;\n\nconst Cards = () => {\n  return (\n    <Row>\n      <Column>\n        <One>\n          <DivImage>\n            <Image src={Image1} />\n            <Name>\n              <strong>Bill Mahoney</strong>\n            </Name>\n          </DivImage>\n          <TextVertical>Product owner</TextVertical>\n        </One>\n      </Column>\n\n      <Column>\n        <Three>\n          <DivImage>\n            <Image src={Image2} />\n            <Name>\n              <strong>Saba Cabrera</strong>\n            </Name>\n          </DivImage>\n          <TextVertical>Art director</TextVertical>\n        </Three>\n      </Column>\n\n      <Column>\n        <Five>\n          <DivImage>\n            <Image src={Image3} />\n            <Name>\n              <strong>Shae Le</strong>\n            </Name>\n          </DivImage>\n          <TextVertical>Tech Lead</TextVertical>\n        </Five>\n      </Column>\n\n      <Column>\n        <Two>\n          <DivImage>\n            <Image src={Image4} />\n            <Name>\n              <strong>Skylah Lu</strong>\n            </Name>\n          </DivImage>\n\n          <TextVertical>UX Designer</TextVertical>\n        </Two>\n      </Column>\n\n      <Column>\n        <Four>\n          <DivImage>\n            <Image src={Image5} />\n            <Name>\n              <strong>Griff Richards</strong>\n            </Name>\n          </DivImage>\n          <TextVertical>Developer</TextVertical>\n        </Four>\n      </Column>\n\n      <Column>\n        <Six>\n          <DivImage>\n            <Image src={Image6} />\n            <Name>\n              <strong>Stan John</strong>\n            </Name>\n          </DivImage>\n          <TextVertical>Deverloper</TextVertical>\n        </Six>\n      </Column>\n    </Row>\n  );\n};\n\nexport default Cards;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Head from \"./components/Head\";\nimport Footer from \"./components/Footer\";\nimport Cards from \"./components/Cards\";\n\nconst Team = () => {\n  return (\n    <>\n      <Head />\n      <Cards />\n      <Footer />\n    </>\n  );\n};\n\nexport default Team;\n","import React from \"react\";\nimport Team from \"./Team\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Team />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}